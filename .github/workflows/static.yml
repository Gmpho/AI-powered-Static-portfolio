name: Deploy Fullstack to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy-worker:
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    runs-on: ubuntu-latest
    outputs:
      worker_url: ${{ steps.deploy_worker_step.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Worker Dependencies
        run: npm install --prefix worker

      - name: Install Wrangler Globally
        run: npm install -g wrangler

      - name: Set Secrets for Wrangler
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          ALLOWED_ORIGINS: ${{ secrets.ALLOWED_ORIGINS }}
        run: |
          if [ -z "$CLOUDFLARE_API_TOKEN" ]; then
            echo "Error: CLOUDFLARE_API_TOKEN secret is not configured in the repository." >&2
            echo "Add it at Settings → Secrets and variables → Actions and retry." >&2
            exit 1
          fi
          echo "DEBUG: CLOUDFLARE_ACCOUNT_ID is $CLOUDFLARE_ACCOUNT_ID"
          if [ -z "$GEMINI_API_KEY" ]; then
            echo "GEMINI_API_KEY is missing" >&2
            exit 1
          fi
          if [ -z "$ALLOWED_ORIGINS" ]; then
            echo "ALLOWED_ORIGINS is missing" >&2
            exit 1
          fi
          echo "$GEMINI_API_KEY" | wrangler secret put GEMINI_API_KEY -c worker/wrangler.toml
          echo "$ALLOWED_ORIGINS" | wrangler secret put ALLOWED_ORIGINS -c worker/wrangler.toml

      - name: Deploy Worker
        id: deploy_worker_step
        env:
          RATE_LIMIT_KV_ID: ${{ secrets.RATE_LIMIT_KV_ID }}
          PROJECT_EMBEDDINGS_KV_ID: ${{ secrets.PROJECT_EMBEDDINGS_KV_ID }}
        run: |
          # Deploy with correct --var syntax (use =). Secrets already pushed above.
          wrangler deploy worker/src/index.ts --var RATE_LIMIT_KV_ID=${RATE_LIMIT_KV_ID} --var PROJECT_EMBEDDINGS_KV_ID=${PROJECT_EMBEDDINGS_KV_ID}

  deploy-frontend:
    needs: deploy-worker
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Root Dependencies
        run: npm install

      - name: Install Frontend Dependencies
        run: npm install
        working-directory: frontend

      - name: Build Frontend
        run: npm run build
        env:
          VITE_WORKER_URL: ${{ needs.deploy-worker.outputs.worker_url }}

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
